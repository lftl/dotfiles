completions = ( 
  { short = "sid"; long = "http://scripts.irssi.de/"; }
);

hilights = ( { text = "lftl"; nick = "yes"; word = "yes"; } );

ignores = (
  {
    level = "JOINS PARTS QUITS MODES NICKS";
    channels = ( "#debian", "##php", "#linux", "#css" );
  },
  {
    level = "CRAP MSGS NOTICES SNOTES CTCPS JOINS PARTS QUITS KICKS MODES TOPICS WALLOPS INVITES NICKS DCC DCCMSGS CLIENTNOTICES CLIENTCRAP CLIENTERRORS HILIGHTS";
    channels = ( "#ubuntu" );
  }
);

servers = (
  {
    address = "chat.freenode.net";
    chatnet = "OPEN";
    port = "6667";
    autoconnect = "YES";
  },
  {
    address = "irc.arstechnica.com";
    chatnet = "ARS";
    port = "6667";
    autoconnect = "YES";
  },
  {
    address = "irc.umich.edu";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
  }
);

chatnets = {
  OPEN = {
    autosendcmd = "/msg NickServ identify PASSWORD";
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
  };
  ARS = { type = "IRC"; };
};

channels = (
  { name = "#linux"; chatnet = "ARS"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  EXIT = "quit";
  DESCRIBE = "action";
  DATE = "time";
  LAST = "lastlog";
  N = "names";
  M = "msg";
  T = "topic";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  WC = "window close";
  WN = "window new hide";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  Q = "QUERY";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Scott Wehrenberg";
    user_name = "spanky";
    nick = "lftl";
  };
  "fe-common/core" = {
    autocreate_own_query = "OFF";
    autocreate_query_level = "DCCMSGS";
    autoclose_query = "5";
    window_auto_change = "ON";
  };
  "irc/dcc" = { dcc_autoget = "yes"; dcc_download_path = "= ~/dl"; };
  "fe-text" = { actlist_sort = "refnum"; };
};
